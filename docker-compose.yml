services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    hostname: cdr-zookeeper
    container_name: cdr-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"  # avoid conflict with local 2181

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    hostname: cdr-kafka
    container_name: cdr-kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  producer:
    build:
      context: .
      dockerfile: services/producer/Dockerfile
    container_name: cdr-producer
    depends_on:
      - kafka
    env_file: .env
    volumes:
      - ./common:/opt/app/common:ro
      - ./generated-config/producer:/opt/app/config
    ports:
      - "8080:8080"

  generator:
    build:
      context: .
      dockerfile: services/data_generator/Dockerfile
    container_name: cdr-generator
    depends_on:
      - producer
    env_file: .env
    volumes:
      - ./common:/opt/app/common:ro
      - ./generated-config/generator:/opt/app/config
    ports:
      - "8000:8000"

  topic-setup:
    image: confluentinc/cp-kafka:7.5.0
    container_name: cdr-topic-setup
    depends_on:
      - kafka
    volumes:
      - ./scripts:/scripts
    entrypoint: ["sh", "-c", "/scripts/topic-setup.sh"]

  spark-job:
    build:
      context: .
      dockerfile: services/spark_job/Dockerfile
    container_name: cdr-spark-job
    depends_on:
      - kafka
      - db
      - topic-setup
    env_file: .env
    command: >
      sh -c "
        /scripts/wait-for-topics.sh &&
        python -m common.config.bridge.build_config --service spark --out /opt/app/config &&
        python -m services.spark_job.main
      "
    volumes:
      - ./generated-config/spark:/opt/app/config
      - ./spark-checkpoints:/spark-checkpoints
      - ./scripts:/scripts:ro

  db:
    image: postgres:15
    container_name: cdr-db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./db/data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"

  migrate:
    build:
      context: .
      dockerfile: db/Dockerfile
    container_name: cdr-db-migrate
    depends_on:
      - db
    env_file: .env
    command: >
      sh -c "
        wait-for-it.sh db:5432 --
        alembic upgrade head
      "

volumes:
  db_data:
  spark-checkpoints:
